"0",""
"0","# Define the desired sampling rate (e.g., GTZAN's sampling rate)"
"0","desired_sampling_rate <- 44100"
"0",""
"0","# Calculate the resampling ratio"
"0","resampling_ratio <- desired_sampling_rate / audio@samp.rate"
"0",""
"0","# Resample the audio data using linear interpolation"
"0","resampled_audio_data <- approx(seq_along(audio_data), audio_data, "
"0","                                seq(1, length(audio_data), by = resampling_ratio))$y"
"0",""
"0","# Create a time vector based on the new sampling rate"
"0","time <- seq(0, (length(resampled_audio_data) - 1) / desired_sampling_rate, "
"0","            by = 1 / desired_sampling_rate)"
"0",""
"0","# Create a data frame for plotting"
"0","df <- data.frame(time = time, amplitude = resampled_audio_data)"
"0",""
"0","# Filter data for the first 4 seconds"
"0","df <- df[df$time <= 4, ]"
"0",""
"0","# Plot the discretized time domain signal for the first 4 seconds using ggplot2"
"0","ggplot(df, aes(x = time, y = amplitude)) +"
"0","  geom_line() +"
"0","  labs(x = ""Time (seconds)"", y = ""Amplitude"") +"
"0","  ggtitle(""Discretized Time Domain Signal (First 4 Seconds) with GTZAN's Sampling Rate"")"
